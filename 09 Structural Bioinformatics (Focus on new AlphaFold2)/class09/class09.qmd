---
title: "class09"
author: "Steven Gan"
format: pdf
toc: true
date: 2022-10-26
theme:
  light: faltly
  dark: darkly
---

# 1: Introduction to the RCSB Protein Data Bank (PDB)

## PDB statistics

```{r}
library(dplyr)
setClass("num.with.commas")
setAs("character", "num.with.commas", 
        function(from) as.numeric(gsub(",", "", from)))

pdb.stat <- read.csv(file = "Data Export Summary.csv", colClasses = "num.with.commas")
pdb.stat[1] <- read.csv(file = "Data Export Summary.csv")[1]
row.names(pdb.stat) <- pdb.stat[,1]
tot.pdb <- colSums(pdb.stat[-1], na.rm = T)
pdb.stat <- rbind(pdb.stat[-1], tot.pdb)
row.names(pdb.stat)[length(pdb.stat)] <- "Total"
```

Q1:

```{r}
xemR = round((pdb.stat["Total", "X.ray"] + pdb.stat["Total", "EM"]) / 
               pdb.stat["Total", "Total"] * 100, 2)
print(paste0("Percentage of structures are solved by X-Ray and EM: ", 
             xemR, "%"))
```

Q2:

```{r}
proR = round((pdb.stat["Protein (only)", "Total"] + 
                pdb.stat["Protein/Oligosaccharide", "Total"]) / 
               pdb.stat["Total", "Total"] * 100, 2)
print(paste0("Proportion of structures in the PDB are protein: ", proR, "%"))
```

Q3:

1264 HIV-1 protease structures are in the current PDB


# 2. Visualizing the HIV-1 protease structure

## Using Mol*; Getting to knowHIV-Pr; Saving an image

![1HSG Image](1HSG.png)

## Devling deeper

Q4:

Since crystallographic experiments do not resolve hydrogen molecules, thus only oxygen molecules are displayed.

Q5: 

![1HSG Water Image](1HSG_H2O.png)
Identified in the graph above, residue 308.

Q6: 

![1HSG Water D25 Image](1HSG_water_D25.png)


# 3. Introduction to Bio3D in R

```{r}
library(bio3d)
```

## Reading PDB file data into R

```{r}
pdb <- read.pdb("1hsg")

pdb
```

Q7:

198 amino acid residues are there in this pdb object.

Q8:

HOH is one of the two non-protein residues.

Q9:

2 protein chains are in this structure.

```{r}
attributes(pdb)
head(pdb$atom)
```

## Predicting functional motions of a single structure

```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
adk.nma <- nma(adk)
plot(adk.nma)
```

```{r}
mktrj(adk.nma, file="adk_m7.pdb")
```
![ADK Movement Image](ADK_M7.PDB-6S36.png)

# 4. Comparative structure analysis of Adenylate Kinase

## Setup

```{r}
# Install packages in the R console NOT your Rmd/Quarto file

# install.packages("bio3d")
# install.packages("devtools")
# install.packages("BiocManager")

# BiocManager::install("msa")
# devtools::install_bitbucket("Grantlab/bio3d-view")
```

Q10:

msa package is found only on BioConductor and not CRAN.

Q11:

bio3d-view is not found on BioConductor or CRAN

Q12:

TRUE:
Functions from the devtools package can be used to install packages from GitHub and BitBucket

## Search and retrieve ADK structures

```{r}
library(bio3d)
aa <- get.seq("1ake_A")

aa
```

Q13: 

214 amino acids in this sequence

```{r}
b <- blast.pdb(aa)
```

```{r}
hits <- plot(b)
```

```{r}
head(hits$pdb.id)
files <- get.pdb(hits$pdb.id, path = "pdbs", split = TRUE, gzip = TRUE)
```

## Align and superpose structures

```{r}
pdbs <- pdbaln(files, fit = TRUE, exefile = "msa")
```

```{r}
ids <- basename.pdb(pdbs$id)
plot(pdbs, labels = ids)
```

## Optional: Viewing our superposed structures

```{r}
library(bio3d.view)
library(rgl)

view.pdbs(pdbs)
```

## Annotate collected PDB structures

```{r}
anno <- pdb.annotate(ids)
unique(anno$source)
anno
```

## Principal component analysis

```{r}
pc.xray <- pca(pdbs)
plot(pc.xray)
```

```{r}
rd <- rmsd(pdbs)

hc.rd <- hclust(dist(rd))
plot(hc.rd)
grps.rd <- cutree(hc.rd, k=3)
plot(pc.xray, 1:2, col = "grey50", bg = grps.rd, pch = 21, cex = 1)
```

# 5. Optional further visualization

```{r}
pc1 <- mktrj(pc.xray, pc = 1, file = "pc_1.pdb")
```
![PCA Image](PC_1.PDB.png)


```{r}
view.xyz(pc1)
view.xyz(pc1, col = vec2color(rmsf(pc1)))
```

```{r}
library(ggplot2)
library(ggrepel)

df <- data.frame(PC1 = pc.xray$z[,1], 
                 PC2 = pc.xray$z[,2], 
                 col = as.factor(grps.rd),
                 ids = ids)

p <- ggplot(df) + 
  aes(PC1, PC2, col = col, label = ids) +
  geom_point(size = 2) +
  geom_text_repel(max.overlaps = 20) +
  theme(legend.position = "none")
p
```


# 6. Normal mode analysis [optional]

```{r}
# NMA of all structures
modes <- nma(pdbs)
```

```{r}
plot(modes, pdbs, col = grps.rd)
```

Q14:

Red and Green groups exhibit similar flexible states accessibility, and are significantly distinguished with Black group. This corresponds with the PCA results, as Red and Green groups are closer and Black group is much far away from them. High flexibility regions tend to appear at regions without fixed secondary structures.
